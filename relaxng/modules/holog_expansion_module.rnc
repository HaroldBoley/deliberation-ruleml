namespace dc = "http://purl.org/dc/elements/1.1/"
namespace dcterms = "http://purl.org/dc/terms/"

dcterms:title [ "RuleML Higher-Order Syntax" ]
dcterms:identifier [ "http://deliberation.ruleml.org/1.03/relaxng/modules/holog_expansion_module.rnc" ]
dcterms:isPartOf [ "http://deliberation.ruleml.org/1.03/spec" ]
dcterms:creator [ "http://wiki.ruleml.org/index.php/User:Athant" ]
dc:subject [ "RuleML, higher-order syntax, nonpredicative" ]
dcterms:description [ "The expansion module for higher-order syntax, also called non-predicative." ]
dcterms:language [ "en" ]
dc:rights [
  'Copyright 2015 RuleML Inc. -- Licensed under the RuleML Specification License, Version 1.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://ruleml.org/licensing/RSL1.0-RuleML. Disclaimer: THIS SPECIFICATION IS PROVIDED "AS IS" AND ANY EXPRESSED OR IMPLIED WARRANTIES, ..., EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. See the License for the specifics governing permissions and limitations under the License.'
]
dcterms:rights [ "http://ruleml.org/licensing/RSL1.0-RuleML" ]
dcterms:relation [ "http://deliberation.ruleml.org" ]
start |= notAllowed

## In Holog languages, any term is allowed to fill the operator role of an Atom or Expr
op_Atom.content |= AnyTerm.choice
op_Expr.content |= AnyTerm.choice

## In Holog languages, a Uniterm formula is a simple formula
Atom-node.choice |= Uniterm-formula.Node.def
## The children of a Uniterm formula are divided into two sections, 
## a header section for modifiers, and a main section for the operator and arguments. 
Uniterm-formula.Node.def =  
  ## simple sentence represented as a Hilog term, generalizing Atom
  ## http://deliberation.ruleml.org/1.03/glossary/#gloss-Uniterm
  element Uniterm { Uniterm-formula.type.def }
Uniterm-formula.type.def = (Atom-datt.choice & reAtom.attlist), Atom.header, Atom.main
#operatorForAtoms-edge.choice |= empty

## In Holog languages, a Uniterm term is a function, relation, or functional expression
Expression-node.choice |= Uniterm-term.Node.def
## The children of a Uniterm term are divided into two sections, 
## a header section for modifiers, and a main section for the operator and arguments. 
Uniterm-term.Node.def =
  ## Also, compound function, relation, or term represented as a Hilog term, generalizing Expr
  element Uniterm { Uniterm-term.type.def }
Uniterm-term.type.def = (Expr-datt.choice & reExpr.attlist), Expr.header, Expr.main
#operatorForExpressions-edge.choice |= empty

## In Holog languages, a Const term is an individual. 
Individual-node.choice |= Const.Node.def
Const.Node.def =
  
  ## <Const>: a constant for Holog languages. See 
  ## http://deliberation.ruleml.org/1.03/glossary/#gloss-Const
  element Const { Const.type.def }
Const.type.def = (Const-datt.choice & reConst.attlist), Ind.value

## constants have interpretation as an attribute.
Const-datt.choice |= interpretation-att-inf.choice

## constants have the attribute pattern of individuals.
reConst.attlist &= reInd.attlist?
