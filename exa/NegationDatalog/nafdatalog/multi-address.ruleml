<?xml version="1.0" encoding="UTF-8"?><?xml-model href="http://deliberation.ruleml.org/1.03/relaxng/nafdatalog_relaxed.rnc"?><!--<?xml-model href="http://deliberation.ruleml.org/1.03/xsd/nafdatalog.xsd" type="application/xml" schematypens="http://www.w3.org/2001/XMLSchema"?>--><RuleML xmlns="http://ruleml.org/spec" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:base="http://example.org/datatypes#" xsi:schemaLocation="http://ruleml.org/spec http://deliberation.ruleml.org/1.03/xsd/nafdatalog.xsd">

<!--A personX has multiple addresses if the personX lives at more than one address, 
   and we fail to prove (using the builtin stringEqualIgnoreCase) that the addresses are the same -->

<Assert mapClosure="universal">
<Rulebase>
<Implies>
  <if>
    <And>
      <Atom>
        <op><Rel>address</Rel></op>
        <Var>personX</Var>
        <Var type="base:String">address1</Var>
      </Atom>
      <Atom>
        <op><Rel>address</Rel></op>
        <Var>personX</Var>
        <Var type="base:String">address2</Var>
      </Atom>
      <Naf>
        <Atom>
          <Rel>stringEqualIgnoreCase</Rel>
          <Var type="base:String">address1</Var>
          <Var type="base:String">address2</Var>
        </Atom>
      </Naf>
    </And>
  </if>
  <then>
    <Atom>
      <Rel>multi-address</Rel>
      <Var>personX</Var>
    </Atom>
  </then>
</Implies>
</Rulebase>

<!--Jack lives at 655 Graham Avenue -->
    <Atom>
      <op><Rel>address</Rel></op>
      <Ind>Jack</Ind>
      <Ind type="base:String">655 Graham Avenue</Ind>
    </Atom>

<!--Jack lives at 552 Windsor -->	
    <Atom>
      <op><Rel>address</Rel></op>
      <Ind>Jack</Ind>
      <Ind type="base:String">552 Windsor</Ind>
    </Atom>
	
<!--Jim lives at 557 Regent -->
	
	<Atom>
      <op><Rel>address</Rel></op>
      <Ind>Jim</Ind>
      <Ind type="base:String">557 Regent</Ind>
    </Atom>
</Assert>

<!--It will succeed as Jack has two addresses -->
<Query>
  <Atom>
    <Rel>multi-address</Rel>
    <Ind>Jack</Ind>
  </Atom>
</Query>

<!--It will fail as Jim has only one address -->
<Query>
  <Atom>
    <Rel>multi-address</Rel>
    <Ind>Jim</Ind>
  </Atom>
</Query>
</RuleML>